#region VİDEO 99

//static void Main(string[] args)
//{

//    /*
     
//    Bölüm 11 Koleksiyonlar VİDEO 99 Hashtable Ödev
     
//    Hashtable içerisine ENG - TR olarak data ekleyen uygulamayı yapacağız
//    ENG tarafını key TR tarafını value olarak saklayacagız

//    Yeni Kayıt eklemek istiyor musunuz (E/H) diye soracak
//    büyük küçük harf olmayacak hepsi büyük
//    E cevabı gelirse yeni kayıt eklemeye devam edecek
//    H cevabı gelirse tüm liseyi yazdıracak

//    var olan bir key değeri ekliyor ise kullanıcıya bu değer daha önceden .... şeklinde sistemimizde bulunmaktadır
//    yazması lazım

//    */

//    Hashtable sozlukVeriTabani = new Hashtable();

//    do
//    {
//        Console.Clear();
//        Console.WriteLine("Eklemek istediğiniz sözlük değerini yazınız : ");
//        Console.WriteLine("EN karşılığı : ");
//        string eng = Console.ReadLine();

//        bool kontrol = sozlukVeriTabani.ContainsKey(eng);
//        if (kontrol)
//        {
//            Console.WriteLine($"Eklemek istediğiniz değer {eng} sözlük içerisinde bulunmaktadır. {sozlukVeriTabani[eng].ToString()} değerin türkçe karşılığıdır.");
//        }
//        else
//        {
//            Console.WriteLine($"{eng} ingilizce değerinin türkçe karşılığını yazınız.");
//            string tr = Console.ReadLine();
//            sozlukVeriTabani.Add(eng, tr);
//            Console.WriteLine("Değer ekleme işlemi başarılı.");
//        }

//        Console.WriteLine("Yeni değer eklemek istiyor musunuz ? (E/H) ");



//    } while (Console.ReadLine().ToUpper() != "H");

//    /*
   
//    2 yöntem ile bunun içinde dönebiliriz
//    1. yöntem key veririz keylerine döneriz keylerini bize koleksiyon olarak veriyor
     
   

//    foreach (var item in sozlukVeriTabani.Keys)
//    {
//        Console.WriteLine("ENG : {0} = TR : {1}", item , sozlukVeriTabani[item]);
//    }
   
//     */

//    /*
     
//    2. yöntem

//    direk sozlukVeriTabani içinde doneriz ama
//    var yerine direk tipini yazmak veya foreach içinde tip dönüşümü yapmamız lazım
//    DictionaryEntry kullandık burda sebebi datanın karsılıgını almak
   
//    DictionaryEntry nerden geliyor onu anlatıyoruz burda
//    bir verinin tipinin ne döndüğünü bilmiyorsanız eğer
   
//    foreach (var item in sozlukVeriTabani)
//    {
//        Console.WriteLine(item.GetType().Name);
//    }

//    olarak tipini bulabilirsiniz

//    bazı veriler kapalı geliyor bizde bunların tipini bulmak zorunda kalıyoruz
//    var yazıyorken item gettype i kullanıyoruz


   

//    foreach (var item in sozlukVeriTabani)
//    {
//        Console.WriteLine(item.GetType().Name);
//    }
   
//    */

//    foreach (DictionaryEntry item in sozlukVeriTabani)
//    {
//        Console.WriteLine("ENG : {0} = TR : {1}", item.Key, item.Value);
//    }

//}

#endregion