

Bölüm 13 OOP Sýnýflar VÝDEO 122 Sýnýf Tanýmlama ve inceleme - 2


        #region VÝDEO 122

        static void Main(string[] args)
        {
            /*
             
            Bölüm 13 OOP Sýnýflar VÝDEO 122 Sýnýf Tanýmlama ve inceleme - 2
             
            */

            /*
            
            121 in devamý notlar karýsmasýn 122 e göre not alýnacak
            yeni bir musteri class ý acýlacak

            debug anlatýmý

            Musteri122 e breakpoint koyalým
            calýstýralým 
            M1 in üstine gelince null yazdýgýný görüyoruz
            neden M1 null yazýyor ona bakalým


            Ram tarafýný konusalým 

            bir dikdörtgen çizelim 
            -------------------------------------
            I    Stack       I       Heap       I
            I                I                  I
            I                I                  I
            -------------------------------------
            I              Static               I
            I                                   I
            -------------------------------------


            M1 in null kýsmýný stack kýsýmda bir nokta olarak dusunelim
            biz nesnemizi program içinde cagýrdýgýmýz da 
            stack bolgesindeki M1 e ulasýyoruz
            M1 demek stack bolgede bir pointer iþaretçi olarak durmasý demek
            = new Musteri dediðimiz de Musteri nesnemizin içerisinde bulunan
            tüm alanlarýn metotlarýn bir paket olarak 
            heap bölgede acýlmasý demek

            breakpoint i ilerlettiðimiz de M1 null olmayacak
            new lenmýs olacak
            M1 bir musteri yi gostermýs olacak
            heap bolgede duran bir musteriyi iþaret etmiþ olacak
            buna referans tipli bir davranýs deniyor

            ilerlettiðimiz de ben artýk null degilim diyor
            benim iþaret ettiðim bir bölge var diyor
            oda
            {NetFramework.D_13_OOP_Siniflar.Musteri122}
            dir diyor
            bunu ok kýsmýndan actýgýmýz da ram uzerýnde olan degerlere ulasabiliyoruz
            henuz bir deger atamasý yapmadýgýmýz için default degerler ile geliyor
            string in default degeri null
            int in default degeri 0 dýr

            programý ilerletip degerleri atalým ok kýsmýndan tekrar bakalým degerler atandý
            atanan degerler
            heap bolgedeki kýsýmda tutuluyor
            buda Musteri122 nin field kýsmýnda olan kýsma deger atamasý yapmýs oluyosun

            buraya ulasmak için M1 i kullanýyoruz

            bir Musteri daha tanýmlayalým M2 diyelim

            M2 ye de M1 i atayalým

            bu sefer ne olacak

            M2 de stack kýsýmda olusacak

            ama heap bolgede iþaret ettiði yer M1 ile ayný yer olacak
            M2 için tekrar heap bolgede bir yer olusturmayacak
            ortak yerleri kullanacak

            uzaktaki birinin bir vazoyu gosterdiðini dusunun
            baska bir kiþi gelince ayný seyi göstermesi için
            onunda kiþiyi degil vazoyu göstermesi gerekir

            2. kiþi 1. kiþiyi gösterirse mantýklý olmaz 
            amac vazo vazoyu gostermesi gerekir

            vazoyu degistirip baska biþey koyarsan oraya gosterilen yer ayný 
            o zaman deger degiþir

            1 kiþiyi kaldýrdým yine vazoyu gosterir
            2 sinide kaldýrýrsak neyi gosterdiðini bulamayýz

            Musteriden yeni bir new leme yapalým

            sistemde bir pointer daha olusturduk ama bu M2 oldu
            bunun ozel bir degeri olmayacak
            M1 neyi gosteriyorsa onu gosterecek

            M1 neye bakýyorsa sende ona bak diyoruz

            ben m1 veya m2 uzerýnden bir degeri degistirdiðim de 
            degerin degismesi gerekir yapalým


            kurgulayarak gidelim kiþi olarak anlatacagýz sizde öyle yapýn
            nesne yonelimli programlayamayý ogrenýrken 
            gercek hayattan ornekleri bolca kullanmalýyýz
            cunku biz gercek hayatta da nesne yönelimli bir dunya da yasýyoruz
            telefon bilgisayar vs hepsi birer nesne aslýnda

            M1 nesnesi olusurken
            M1 null olarak duruyor new ile orneklenmesý gerekir
            new lenmediði için ondan dolayý null

            diyoruz ki suraya bak baktýgýnda new lenme iþlemi oldugunda ornek olusmus oluyor
            sonra diyoruz ki oraya su degerleri yaz

            sonra M2 olusacak once null new lenmesý gerekiyor
            M2 e diyoruz ki m1 in yanýna git neye bakýyorsa ayný yere bak

            þimdi biz m2 e diyoruz ki isim degerini guncelle
            ram e gidip guncelleyecek m1 bu guncellemeyi gorur ayný yere bakýyorlar
            m1 e desek oda ayný iþlemi yapacak bu sefer de m2 gorecek


            M2 ve m1 den degisiklik yapýp degistirdik
            degerler degisti


            burasý referans tipli davranýsýn anlatýmý 
            class lar referans tiplidir.

            ---------------------------------------------

            birde soyle yapalým M2 ve M1 yi null a alýp yani bos a cekelim
            sonrada atama iþlemi yapalým o zaman ne olacak

            þimdi buradaki mantýgý anlatacagýz
            bellekten dusmeler nasýl oluyor

            garbage collector çöp toplama nasýl iþliyor

            garbage collector dedýgýmýz bir mantýk var
            bizim burda o mantýga dokunmamýz anlamsýz
            .net framework garbage collector dediðimiz bir yapý ile ram den dusen artýk atýl kalan 
            nesneleri temizliyor bu temizleme mantýgýndan biraz bahsedelim

            M2 null kýsmýna breakpoint koyalým
            m2 e diyoruz ki sen ortamdan cekil
            m2 e diyoruz ki sen artýk buraya bakma
            m2 e ulasýnca null gorecegýz bir yere bakmýyor yani

            beným degerým m1 in uzerýnde 
            yaný beným degerýmý heap bolgede degerýmý stack bolgede duran
            bir pointerim hala tutuyor
            yani ben dataya m1 uzerýnden hala eriþebiliyorum
            peki ben m1 i de ortamdan kaldýrdýgýmda 
            yani m1 i de null yaptýgýmýz da 

            artýk bellekte o bilgiyi tutan bir pointerim olmuyor
            iþte tam bu boktada arkada bir yapý calýsýyor

            heap bolgede bir deger pointersiz kalýrsa
            yaný onu gosteren bir deger kalmaz ise

            bu deger ram den duser

            arkada atýl kalan datayý alan garbage collector yapýsý bunu siler

            m2.isim e ulasmaya calýstýgýmýz da null hatasý alýrýz
            m2 nin musteri nesnesi oldugunu biliyorum
            ama senýn bana gosterdýgýn deger acýlmamýs diyor onun hatasýný verýyor

            boyle bir hata alýyorsanýz = new dememýssýnýzdýr


            */

            Musteri122 M1 = new Musteri122();
            M1.TcKimlikNumarasi = "12345678910";
            M1.Isim = "Mücahit";
            M1.SoyIsim = "Çetinkaya";
            M1.Cinsiyet = 717770001;

            Musteri122 M2 = M1;

            M2.Isim = "Muhammet";
            M1.TcKimlikNumarasi = "122544013250";

            M2 = null;
            M1 = null;

            string isim = M2.Isim;



        }

        #endregion



using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace D_13_OOP_Siniflar
{
    public class Musteri122
    {

        public string TcKimlikNumarasi { get; set; }
        public string Isim { get; set; }
        public string SoyIsim { get; set; }
        public int Cinsiyet { get; set; }


    }
}